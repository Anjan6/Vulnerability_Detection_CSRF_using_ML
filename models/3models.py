from flask import Flask, render_template, request
import pandas as pd
import joblib

app = Flask(__name__)

# Load the saved models
models = {
    'xgboost': joblib.load('C://CSRF//xgb.pkl'),
    'decision_tree': joblib.load('C://CSRF//DT.pkl'),
    'random_forest': joblib.load('C://CSRF//RF.pkl')
}

# Load the training columns
training_columns = joblib.load("D://models//training_columns.pkl")

# Select the columns for user input
input_columns = ['Method', 'host', 'cookie', 'connection', 'URL']

# Create a function to preprocess user input
def preprocess_input(user_input):
    # Create a DataFrame from the user input
    input_data = pd.DataFrame([user_input])

    # One-hot encode the user input
    input_encoded = pd.get_dummies(input_data)

    # Reorder the columns to match the training data
    input_encoded = input_encoded.reindex(columns=training_columns, fill_value=0)

    return input_encoded

# Create a function to make predictions
def predict(input_data, model_name):
    # Preprocess the input
    input_encoded = preprocess_input(input_data)

    # Make predictions using the specified model
    prediction = models[model_name].predict(input_encoded)

    return prediction

@app.route('/', methods=['GET', 'POST'])
def home():
    if request.method == 'POST':
        input_data = {}
        for column in input_columns:
            input_data[column] = request.form[column]

        # Choose the model based on user input
        model_name = request.form['model']

        if all(value != '' for value in input_data.values()):
            prediction = predict(input_data, model_name)
            return render_template('result.html', prediction=prediction)
        else:
            return render_template('index.html', error_message="Please enter all the required inputs.")
    else:
        return render_template('index.html', error_message="")

if __name__ == '__main__':
    app.run(debug=True)
